# Copyright (c) 2024 Hemi Labs, Inc.
# Use of this source code is governed by the MIT License,
# which can be found in the LICENSE file.

# GitHub Actions workflow to build and push Docker images.
name: "Staging"
on:
  push:
    branches: [ "staging" ]
  workflow_dispatch:

concurrency:
  group: "staging-${{ github.event.number || github.ref }}"
  cancel-in-progress: false

env:
  DOCKER_IMAGE_NAME: "popm-web"

jobs:
  docker:
    name: "Docker (hemilabs/${{ env.DOCKER_IMAGE_NAME }})"
    runs-on: "ubuntu-latest"
    permissions:
      contents: read
      packages: write
    outputs:
      image: "hemilabs/${{ env.DOCKER_IMAGE_NAME }}:${{ steps.prepare.outputs.sha_short }}"
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: "Setup QEMU"
        uses: docker/setup-qemu-action@v3

      - name: "Setup Docker Buildx"
        uses: docker/setup-buildx-action@v3

      - name: "Login to DockerHub"
        uses: docker/login-action@v3
        with:
          username: "${{ secrets.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_TOKEN }}"

      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v3
        with:
          registry: "ghcr.io"
          username: "${{ github.repository_owner }}"
          password: "${{ secrets.GITHUB_TOKEN }}"

      - name: "Prepare"
        id: "prepare"
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
          echo "build_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> "$GITHUB_OUTPUT"

      - name: "Build and push"
        uses: docker/build-push-action@v6
        with:
          context: "${{ github.workspace }}"
          platform: "amd64"
          file: "${{ github.workspace }}/Dockerfile"
          push: true
          build-args: |
            VERSION=${{ steps.prepare.outputs.sha_short }}
            VCS_REF=${{ github.sha }}
            BUILD_DATE=${{ steps.prepare.outputs.build_date }}
          tags: |
            hemilabs/${{ env.DOCKER_IMAGE_NAME }}:${{ steps.prepare.outputs.sha_short }}
            ghcr.io/hemilabs/${{ env.DOCKER_IMAGE_NAME }}:${{ steps.prepare.outputs.sha_short }}

  deploy:
    name: "Deploy to VKE"
    runs-on: "ubuntu-latest"
    needs: [ "docker" ]
    permissions:
      contents: read
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: "Install kubectl"
        uses: azure/k8s-set-context@27bfb387305b8f0ab5495d692e4a3304db7d0669 # v4.0.0
        with:
          method: "kubeconfig"
          kubeconfig: "${{ secrets.VKE_STAGING_KUBECONFIG }}"
          context: "${{ secrets.VKE_STAGING_KUBECONFIG_CONTEXT }}"

      - name: "Install Kustomize"
        uses: imranismail/setup-kustomize@2ba527d4d055ab63514ba50a99456fc35684947f # v2.1.0

      - name: "Deploy to VKE hemi-staging"
        working-directory: "./kubernetes/kustomize/base"
        env:
          IMAGE: "${{ needs.docker.outputs.image }}"
        run: |
          kustomize edit set namespace "popm-web"
          kustomize edit set image "$IMAGE"
          kustomize build .
          kubectl apply -k .
